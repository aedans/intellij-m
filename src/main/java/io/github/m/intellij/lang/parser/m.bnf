{
  parserClass="io.github.m.intellij.lang.parser.MParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="M"
  psiImplClassSuffix="Impl"
  psiPackage="io.github.m.intellij.lang.psi"
  psiImplPackage="io.github.m.intellij.lang.psi.impl"
  psiImplUtilClass="io.github.m.intellij.lang.psi.MPsiImplUtil"

  elementTypeHolderClass="io.github.m.intellij.lang.lexer.MTokenTypes"
  elementTypeClass="io.github.m.intellij.lang.lexer.MElementType"
  tokenTypeClass="io.github.m.intellij.lang.lexer.MTokenType"
}

file ::= (whitespace* iexpr)* whitespace*

iexpr ::= ilist | expr
expr ::= paren_list | brace_list | bracket_list | apply_paren_list | apply_brace_list | apply_bracket_list | atom

ilist ::= (nosspace* expr)+ nosspace* STATEMENT_BREAK (nosspace* INDENT slist* nosspace* DEDENT)?
slist ::= (nosspace* iexpr)+ | nosspace* STATEMENT_BREAK

paren_list ::= OPEN_PAREN (whitespace* expr)* whitespace* CLOSE_PAREN
brace_list ::= OPEN_BRACE (whitespace* expr)* whitespace* CLOSE_BRACE
bracket_list ::= OPEN_BRACKET (whitespace* expr)* whitespace* CLOSE_BRACKET

apply_paren_list ::= atom OPEN_PAREN (whitespace* expr)* whitespace* CLOSE_PAREN
apply_brace_list ::= atom OPEN_BRACE (whitespace* expr)* whitespace* CLOSE_BRACE
apply_bracket_list ::= atom OPEN_BRACKET (whitespace* expr)* whitespace* CLOSE_BRACKET

atom ::= IDENTIFIER | STRING | NUMBER

whitespace ::= sspace | nosspace
nosspace ::= SPACE | TAB | NEWLINE
sspace ::= STATEMENT_BREAK | INDENT | DEDENT
